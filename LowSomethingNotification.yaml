blueprint:
  name: Single Battery Sensor Low Notification
  description: >
    Monitors one battery sensor and sends a notification when its percentage
    falls below a defined threshold.  
    Includes a customizable message and a static icon picker for a simple, visual setup.
  domain: automation

  input:
    battery_sensor:
      name: Battery Sensor
      description: Select the battery level sensor to monitor.
      selector:
        entity:
          domain: sensor

    notify_devices:
      name: Notification Targets
      description: Devices (mobile_app) to receive the alert.
      selector:
        device:
          multiple: true
          integration: mobile_app

    battery_threshold:
      name: Battery Threshold
      description: Notify when the battery level drops below this value.
      default: 25
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"
          mode: slider

    message_template:
      name: Notification Message
      description: >
        Use a Jinja template to customize the message.  
        Variable: `entity` (the selected sensor).  
        Example: "{{ state_attr(entity, 'friendly_name') }} is at {{ states(entity) }}% battery."
      default: "{{ state_attr(entity, 'friendly_name') }} is at {{ states(entity) }}% battery."
      selector:
        text:

    icon:
      name: Notification Icon
      description: Select an icon to display with the notification.
      default: mdi:battery-alert
      selector:
        icon:

    check_interval:
      name: Check Interval (minutes)
      description: How often to check the battery level.
      default: 30
      selector:
        number:
          min: 1
          max: 120
          unit_of_measurement: "min"
          mode: slider

mode: restart
max_exceeded: silent

trigger:
  - platform: time_pattern
    minutes: "/{{ check_interval }}"

variables:
  entity: !input battery_sensor
  threshold: !input battery_threshold
  message_template: !input message_template
  icon: !input icon

condition:
  - condition: template
    value_template: "{{ states(entity) is number and (states(entity) | int) <= threshold }}"

action:
  - variables:
      message: "{{ message_template }}"
  - repeat:
      for_each: !input notify_devices
      sequence:
        - service: notify.send_message
          data:
            target: "{{ device_attr(repeat.item, 'name') }}"
            title: "Low Battery Alert"
            message: "{{ message }}"
            data:
              icon: "{{ icon }}"
