blueprint:
  name: Valoautomaatio napilla
  description: Sytyttää/sammuttaa valot ja säätää kirkkautta sekä värilämpötilaa nopealla painalluksella. Muista luoda jokaiselle valoautomaatiolle oma ajastin (timer).
  domain: automation
  input:
    remote_device:
      name: Trigger Device
      description: The button or other device to trigger the automation
      selector:
        device: {}
    light_entity:
      name: Light Entity
      description: The light to control
      selector:
        entity:
          domain: light
    timer_entity:
      name: Timer Entity
      description: The timer entity to track time since last button press (eg. 3 seconds)
      selector:
        entity:
          domain: timer
    brightness_low:
      name: Low Brightness Threshold
      description: The brightness level for low setting (eg. 1%)
      default: 1
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    brightness_medium:
      name: Medium Brightness Threshold
      description: The brightness level for medium setting (eg. 30%)
      default: 30
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    brightness_high:
      name: High Brightness Threshold
      description: The brightness level for high setting (eg. 100%)
      default: 100
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    kelvin_low:
      name: Low Kelvin Temperature
      description: Kelvin temperature for low brightness setting
      default: 2000
      selector:
        number:
          min: 1000
          max: 6500
          unit_of_measurement: "K"
    kelvin_medium:
      name: Medium Kelvin Temperature
      description: Kelvin temperature for medium brightness setting
      default: 4384
      selector:
        number:
          min: 1000
          max: 6500
          unit_of_measurement: "K"
    kelvin_high:
      name: High Kelvin Temperature
      description: Kelvin temperature for high brightness setting
      default: 5310
      selector:
        number:
          min: 1000
          max: 6500
          unit_of_measurement: "K"

trigger:
  - platform: device
    device_id: !input remote_device
    domain: zha
    type: remote_button_short_press
    subtype: remote_button_short_press

condition: []

action:
  - choose:
      - conditions:
          # Nighttime (before sunrise or after sunset) and light off
          - condition: sun
            before: sunrise
            after: sunset
          - condition: state
            entity_id: !input light_entity
            state: "off"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light_entity
            data:
              brightness_pct: !input brightness_low
              kelvin: !input kelvin_low
            alias: Set brightness to low (nighttime)

      - conditions:
          # Daytime (before sunset and after sunrise) and light off
          - condition: sun
            before: sunset
            after: sunrise
          - condition: state
            entity_id: !input light_entity
            state: "off"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light_entity
            data:
              brightness_pct: !input brightness_high
              kelvin: !input kelvin_high
            alias: Set brightness to high (daytime)

  - choose:
      - conditions:
          # If timer is active and brightness is medium, set to low
          - condition: state
            entity_id: !input timer_entity
            state: "active"
          - condition: numeric_state
            entity_id: !input light_entity
            attribute: brightness
            below: 110
            above: 10
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light_entity
            data:
              brightness_pct: !input brightness_low
              kelvin: !input kelvin_low
            alias: Set brightness to low

      - conditions:
          # If timer is active and brightness is high, set to medium
          - condition: state
            entity_id: !input timer_entity
            state: "active"
          - condition: numeric_state
            entity_id: !input light_entity
            attribute: brightness
            above: 110
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light_entity
            data:
              brightness_pct: !input brightness_medium
              kelvin: !input kelvin_medium
            alias: Set brightness to medium

      - conditions:
          # If timer is active and brightness is very low, set to high
          - condition: state
            entity_id: !input timer_entity
            state: "active"
          - condition: numeric_state
            entity_id: !input light_entity
            attribute: brightness
            below: 10
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light_entity
            data:
              brightness_pct: !input brightness_high
              kelvin: !input kelvin_high
            alias: Set brightness to high

      - conditions:
          # Turn off light if timer is not active
          - condition: not
            conditions:
              - condition: state
                entity_id: !input timer_entity
                state: "active"
        sequence:
          - service: light.turn_off
            target:
              entity_id: !input light_entity
            alias: Turn off light

  - service: timer.start
    target:
      entity_id: !input timer_entity

mode: single
